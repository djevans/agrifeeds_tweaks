<?php

/**
 *  Implements hook_views_api().
 */
function agrifeeds_tweaks_views_api() {
  $module_path = drupal_get_path('module', 'agrifeeds_tweaks');
  $base_path = $module_path . '/views';
  $template_path = $base_path . '/templates';
  return array(
    'api' => 3,
    'path' => $base_path,
    'template path' => $template_path,
  );
}

/**
 *  Implements hook_rdf_namespaces().
 */
function agrifeeds_tweaks_rdf_namespaces() {
  $namespaces = array(
    'adms' => 'http://www.w3.org/ns/adms#',
    'dcat' => 'http://www.w3.org/ns/dcat#',
    'dctype' => 'http://purl.org/dc/dcmitype/',
    'doap' => 'http://usefulinc.com/ns/doap#',
  );
  return $namespaces;
}

/**
 *  Implements hook_ctools_plugin_directory().
 */
function agrifeeds_tweaks_ctools_plugin_directory($owner, $plugin_type) {
  if ('feeds_tamper' == $owner && 'plugins' == $plugin_type) {
    return 'feeds_tamper/plugins';
  }
}

/**
 *  Implements hook_views_pre_execute().
 */
function agrifeeds_tweaks_views_pre_execute(&$view) {
  if ('ciard_ring_datasets' == $view->name) {
    // Move the 'dataset_dcat_distribution' key to the end of the query's
    // $triples array. This helps us to consolidate the results work correctly.
    $keys = array_keys($view->query->triples);
    $offset = array_search('dataset_dcat_distribution', $keys);
    if ($offset !== FALSE) {
      // If the key exists, remove and reinsert in at the end of the array.
      $distro_triples = array_splice($view->query->triples, $offset, 1);
      $view->query->triples = array_merge($view->query->triples, $distro_triples);
    }
  }
}

/**
 *  Implements hook_views_post_execute().
 */
function agrifeeds_tweaks_views_post_execute(&$view) {

  if ('ciard_ring_datasets' == $view->name) {
    // The ARC2 store seems to have a problem where it incorrectly binds
    // values to optional variables, so instead of using OPTIONAL and !BOUND()
    // to achieve negation in SPARQL 1.0, we have to filter the consolidated
    // results.
    if ('news_export' == $view->current_display) {
      $view->result = array_filter($view->result, 'agrifeeds_tweaks_no_events_or_jobs');
    }
  }

}

function agrifeeds_tweaks_no_events_or_jobs($element) {
  $application_profiles = array(
    'http://ring.ciard.net/node/19239', // The Ag-Events Application Profile
    'http://ring.ciard.net/node/19240', // The Ag-Job Application Profile
  );
  $field_alias = 'distribution_dc_conforms_to';
  // Return TRUE if the dataset conforms to neither of the above profiles.
  $matches = array_intersect($application_profiles, $element[$field_alias]);
  return empty($matches);
}

/**
 *  Implements hook_preprocess_HOOK().
 */
function agrifeeds_tweaks_preprocess_views_data_export_xml_body(&$vars) {

  // We want each consolidated field with multiple values to appear in the XML
  // as multiple instances of the same tag.
  // SPARQL Views gives us an unordered list by default - here we use the
  // DOMDocument class to extract the <li> elements,  where appropriate.
  // In any case, all field values will be returned as arrays, to be output by
  // the 'views-data-export-xml-body--ciard-ring-datasets' template.

  foreach ($vars['themed_rows'] as $num => $row) {
    foreach ($row as $field => $content) {
      $dom = new DOMDocument();
      $dom->loadXML($content);
      $errors = libxml_get_errors();
      if (empty($errors)) {
        $items = $dom->getElementsByTagName('li');
        if ($items->length > 0) {
          $node_values = array();
          foreach ($items as $item) {
            $node_values[] = $item->nodeValue;
          }
          $vars['themed_rows'][$num][$field] = $node_values;
        }
        else {
          $vars['themed_rows'][$num][$field] = array($content);
        }
      }
      else {
        $vars['themed_rows'][$num][$field] = array($content);
      }
    }
  }
}
